name: task manager server deployment
on:
  push:
    branches: [master]
    
env: 
   AWS_REGION: eu-north-1
   REPOSITORY: task-manager-repo
   ECS_SERVICE: task-manager-service
   ECS_CLUSTER: task-manager-cluster
   ECS_TASK_DEFINITION: task-manager-td
jobs:
   build:
      name: Build image
      runs-on: ubuntu-latest
      environment: production
      steps:
        - name: Check out code
          uses: actions/checkout@v2
        - name: Setup Node.js environment
          uses: actions/setup-node@v2.5.2
        - name: Build with NPM
          run: npm run build
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}} 
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}} 
            aws-region: eu-north-1
            
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
        - name: Build, tag, and push docker image to Amazon ECR
          id: build-image
          env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
            docker push $REGISTRY/$REPOSITORY:latest
            echo "::set-output name=image::$REGISTRY/$REPOSITORY:latest"
            
        - name: Download task definition
          run: |
            aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION --query taskDefinition > task-definition.json
        - name: Update the Task Definition
          id: update-task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: task-definition.json
            container-name: task-manager-container
            image: ${{ steps.build-image.outputs.image }}
        - name: Stop Old Task
          run: |
           aws ecs update-service --cluster  $ECS_CLUSTER --service $ECS_SERVICE --desired-count 0
            
        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: ${{ steps.update-task-def.outputs.task-definition }}
            service: $ECS_SERVICE
            cluster: $ECS_CLUSTER
        
        - name: Start new task
          run: |
           aws ecs update-service --cluster   $ECS_CLUSTER --service  $ECS_SERVICE --desired-count 1 --force-new-deployment